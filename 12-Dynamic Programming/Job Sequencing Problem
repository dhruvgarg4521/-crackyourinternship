class Solution 
{
    public:
    //Function to find the maximum profit and the number of jobs done.
    vector<int> JobScheduling(Job arr[], int n) 
    { 
        sort(arr, arr + n, [](Job &a, Job &b) {
            return a.profit > b.profit;
        });
        int maxdeadline = 0;
        for(int i = 0; i < n; i++) {
            maxdeadline = max(maxdeadline, arr[i].dead);
        }
        vector<int> timeline(maxdeadline + 1, -1);
        int jobs = 0;
        int profit = 0;
        for(int i = 0; i < n; i++) {
            for(int j = arr[i].dead; j > 0; j--) {
                if(timeline[j] == -1) {
                    timeline[j] = arr[i].id;
                    jobs += 1;
                    profit += arr[i].profit;
                    break;
                }
            }
        }
        return {jobs, profit};
    } 
