class Solution {
public:
vector<vector<int >> directions {{1,0},{-1,0},{0,1},{0,-1}};
bool find(vector<vector<char>>& board,int i ,int j,int ind,int m,int n, string word)
{
    if(ind==word.length()) return true;
    if(i<0 || j<0 || i>=m || j>=n || board[i][j]=='$' || board[i][j]!=word[ind]) return false;
    char temp = board[i][j];
    board[i][j]='$';
    for(auto &dir : directions)
    {
        int i_=i+dir[0];
        int j_=j+dir[1];
        if(find(board,i_,j_,ind+1,m,n,word))
        return true;
    }
    board[i][j]=temp;
    return false;
}
    bool exist(vector<vector<char>>& board, string word) {
        int m = board.size();
        int n = board[0].size();
        for(int i =0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(board[i][j]==word[0] && find(board,i,j,0,m,n,word))
                {
                    return true;
                }
            }
        }
        return false;
    }
};
