/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    int len(ListNode* head) {
        ListNode* temp = head;
        int len = 0;
        while (temp != NULL) {
            len++;
            temp = temp->next;
        }
        return len;
    }

    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        int len1 = len(headA);
        int len2 = len(headB);
        ListNode *temp1 = headA;
        ListNode *temp2 = headB;
        if (len1 > len2) {
            int diff = len1 - len2;
            while (diff != 0) {
                temp1 = temp1->next;
                diff--;
            }
        } else if (len2 > len1) {
            int diff = len2 - len1;
            while (diff != 0) {
                temp2 = temp2->next;
                diff--;
            }
        }
        while (temp1 != NULL) {
            if (temp1 == temp2) {
                return temp1;
            }
            temp1 = temp1->next;
            temp2 = temp2->next;
        }
        return NULL;
    }
};
