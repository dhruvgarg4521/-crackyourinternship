class Solution {
public:
    bool checkPal(string &str, int start, int end) {
        while (start < end) {
            if (str[start] != str[end]) {
                return false;
            }
            start++;
            end--;
        }
        return true;
    }

    void subseq(int i, string &s, vector<vector<string>> &ans, vector<string> &ds) {
        if (i == s.size()) {
            ans.push_back(ds);
            return;
        }
        for (int j = i; j < s.size(); j++) {
            if (checkPal(s, i, j)) {
                ds.push_back(s.substr(i, j - i + 1));
                subseq(j + 1, s, ans, ds);
                ds.pop_back();
            }
        }
    }

    vector<vector<string>> partition(string s) {
        vector<vector<string>> ans;
        vector<string> ds;
        subseq(0, s, ans, ds);
        return ans;
    }
};
