class Solution {
public:
    void subseq(int i, vector<int>& nums, set<vector<int>>& ans, vector<int>& ds) {
        if (i == nums.size()) {
            ans.insert(ds);
            return;
        }
        ds.push_back(nums[i]);
        subseq(i + 1, nums, ans, ds);
        ds.pop_back();
        subseq(i + 1, nums, ans, ds);
    }

    vector<vector<int>> subsetsWithDup(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        set<vector<int>> ans;
        vector<int> ds;
        subseq(0, nums, ans, ds);
        vector<vector<int>> ans_s(ans.begin(),ans.end());
        return ans_s;
    }
};
