//{ Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
// User function Template for C++

class Solution{
private:
void dfs(int row,int col,vector<vector<int>> &visited,vector<vector<char>> &board)
{
    visited[row][col] = 1;
    int del_row[] ={-1,0,+1,0};
    int del_col[] ={0,+1,0,-1};
    int n = board.size();
    int m = board[0].size();
        for(int i =0;i<4;i++)
        {
            int nr = row+del_row[i];
            int nc = col+del_col[i];
            if(nr>=0 && nr<n && nc>=0 && nc<m && !visited[nr][nc] && board[nr][nc]=='O')
            {
                dfs(nr,nc,visited,board);
            }
        }
}
public:
    vector<vector<char>> fill(int n, int m, vector<vector<char>> board)
    {
        vector<vector<int>> visited(n,vector<int>(m,0));
        for(int i=0;i<n;i++)
        {
           if(board[i][0]=='O') dfs(i,0,visited,board);
           if(board[i][m-1]=='O') dfs(i,m-1,visited,board);
        }
        for(int j=0;j<m;j++)
        {
           if(board[0][j]=='O') dfs(0,j,visited,board);
           if(board[n-1][j]=='O') dfs(n-1,j,visited,board);
        }
        for(int i =0;i<n;i++){
            for(int j =0;j<m;j++){
                if(visited[i][j]){
                    board[i][j]='O';
                }
                else {
                    board[i][j]='X';
                }
            }
        }
        return board;
    }
};

//{ Driver Code Starts.

int main(){
    int t;
    cin>>t;
    while(t--){
        int n, m;
        cin>>n>>m;
        vector<vector<char>> mat(n, vector<char>(m, '.'));
        for(int i = 0;i < n;i++)
            for(int j=0; j<m; j++)
                cin>>mat[i][j];
        
        Solution ob;
        vector<vector<char>> ans = ob.fill(n, m, mat);
        for(int i = 0;i < n;i++) {
            for(int j = 0;j < m;j++) {
                cout<<ans[i][j]<<" ";
            }
            cout<<"\n";
        }
    }
    return 0;
}
// } Driver Code Ends
