class Solution {
public:
    int findTheCity(int n, vector<vector<int>>& edges, int distanceThreshold) {
        vector<vector<int>> grid(n,vector<int>(n,INT_MAX));
        for(int i =0;i<n;i++){
            grid[i][i]=0;
        }
        for(auto &edge : edges){
            int u = edge[0];
            int v = edge[1];
            int w = edge[2];
            grid[u][v] = w;
            grid[v][u] = w;
        }
        for(int via = 0;via<n;via++){
            for(int i =0;i<n;i++){
                for(int j =0;j<n;j++){
                    if (grid[i][via] != INT_MAX && grid[via][j] != INT_MAX) grid[i][j] = min(grid[i][j],grid[i][via]+grid[via][j]);
                }
            }
        }
        int mincnt = n;
        int citymin = -1;
        for(int i =0;i<n;++i){
            int neighbourcnt = 0;
            for(int j =0;j<n;j++){
                if(i!=j && grid[i][j] <= distanceThreshold){
                    ++neighbourcnt;
                }
            }
            if(neighbourcnt <= mincnt){
                mincnt = neighbourcnt;
                citymin = i;
            }
        }
        return citymin;
    }
};
