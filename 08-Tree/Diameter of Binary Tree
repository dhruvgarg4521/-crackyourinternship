/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
int heights(TreeNode* root,int &diameter)
{
    if(!root) return 0;
    int maxleft = heights(root->left,diameter);
    int maxright = heights(root->right,diameter);
    diameter = max(diameter,maxleft+maxright);
    return max(maxleft,maxright)+1;
}
    int diameterOfBinaryTree(TreeNode* root) {
        if(!root) return 0;
        int diameter=0;
        heights(root,diameter);
        return diameter;
    }
};
