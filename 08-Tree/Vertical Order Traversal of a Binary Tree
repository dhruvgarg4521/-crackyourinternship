class Solution {
public:
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        map<int,map<int,multiset<int>>> mpp;
        queue<pair<TreeNode*,pair<int,int>>> q;
        q.push({root,{0,0}});
        while(!q.empty())
        {
            auto x = q.front();
            q.pop();
            TreeNode* node = x.first;
            int i = x.second.first;
            int j= x.second.second;
            mpp[i][j].insert(node->val);
            if(node->left != nullptr)
            {
                q.push({node->left,{i-1,j+1}});
            }
            if(node->right != nullptr)
            {
                q.push({node->right,{i+1,j+1}});
            }
        }
        vector<vector<int>> ans;
        for(auto x : mpp)
        {
            vector<int> col;
            for(auto y : x.second)
            {
                col.insert(col.end(),y.second.begin(),y.second.end());
            }
            ans.push_back(col);
        }
        return ans;
    }
};
